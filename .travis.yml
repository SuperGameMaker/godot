language: cpp

dist: trusty

sudo: false

cache: ccache

matrix:
  include:
    - env: GODOT_TARGET=javascript TOOLS=yes WASM=yes
      os: linux
      compiler: gcc

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-3.9
    packages:
      - build-essential
      - scons
      - pkg-config
      - libx11-dev
      - libxcursor-dev
      - libasound2-dev
      - libfreetype6-dev
      - libgl1-mesa-dev
      - libglu1-mesa-dev
      - libssl-dev
      - libxinerama-dev
      - libxrandr-dev

      # For cross-compiling to Windows.
      #- binutils-mingw-w64-i686
      #- binutils-mingw-w64-x86-64
      #- gcc-mingw-w64-i686
      #- gcc-mingw-w64-x86-64
      #- g++-mingw-w64-i686
      #- g++-mingw-w64-x86-64
      #- mingw-w64

      # For style checks.
      - clang-format-3.9
      
services:
  - docker

install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$GODOT_TARGET" = "android" ]; then
      misc/travis/android-tools-linux.sh;
    fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      misc/travis/scons-local-osx.sh;
      misc/travis/ccache-osx.sh;
    fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ] && [ "$GODOT_TARGET" = "android" ]; then
      misc/travis/android-tools-osx.sh;
    fi

before_script:
  - docker run -dit --name emscripten -v $(pwd):/src trzeci/emscripten:sdk-incoming-64bit bash
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      export CCACHE="/usr/bin/ccache";
    fi

script:
  - if [ "$STATIC_CHECKS" = "yes" ]; then
      sh ./misc/travis/clang-format.sh;
    else
      scons -j2 CC=$CC CXX=$CXX platform=$GODOT_TARGET TOOLS=$TOOLS verbose=yes progress=no wasm=yes;
    fi

after_success:
  - if [ "$STATIC_CHECKS" != "yes" ] && [ $(command -v ccache) ]; then
      which ccache;
      ccache --version | grep "ccache version";
      ccache -s;
    fi;
